//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.10.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from /Users/ryannkelly/Desktop/BisUtils/BisUtils.Generated/BisUtils.Generated.ParamLang/ParamParser.g4 by ANTLR 4.10.1

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace BisUtils.Generated.ParamLang;
using Antlr4.Runtime.Misc;
using IParseTreeListener = Antlr4.Runtime.Tree.IParseTreeListener;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete listener for a parse tree produced by
/// <see cref="ParamParser"/>.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.10.1")]
[System.CLSCompliant(false)]
public interface IParamParserListener : IParseTreeListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="ParamParser.computationalStart"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterComputationalStart([NotNull] ParamParser.ComputationalStartContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ParamParser.computationalStart"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitComputationalStart([NotNull] ParamParser.ComputationalStartContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ParamParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStatement([NotNull] ParamParser.StatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ParamParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStatement([NotNull] ParamParser.StatementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ParamParser.arrayAppension"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterArrayAppension([NotNull] ParamParser.ArrayAppensionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ParamParser.arrayAppension"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitArrayAppension([NotNull] ParamParser.ArrayAppensionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ParamParser.arrayTruncation"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterArrayTruncation([NotNull] ParamParser.ArrayTruncationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ParamParser.arrayTruncation"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitArrayTruncation([NotNull] ParamParser.ArrayTruncationContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ParamParser.deleteStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDeleteStatement([NotNull] ParamParser.DeleteStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ParamParser.deleteStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDeleteStatement([NotNull] ParamParser.DeleteStatementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ParamParser.externalClassDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExternalClassDeclaration([NotNull] ParamParser.ExternalClassDeclarationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ParamParser.externalClassDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExternalClassDeclaration([NotNull] ParamParser.ExternalClassDeclarationContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ParamParser.classDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterClassDeclaration([NotNull] ParamParser.ClassDeclarationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ParamParser.classDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitClassDeclaration([NotNull] ParamParser.ClassDeclarationContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ParamParser.arrayDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterArrayDeclaration([NotNull] ParamParser.ArrayDeclarationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ParamParser.arrayDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitArrayDeclaration([NotNull] ParamParser.ArrayDeclarationContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ParamParser.tokenDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTokenDeclaration([NotNull] ParamParser.TokenDeclarationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ParamParser.tokenDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTokenDeclaration([NotNull] ParamParser.TokenDeclarationContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ParamParser.literalArray"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLiteralArray([NotNull] ParamParser.LiteralArrayContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ParamParser.literalArray"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLiteralArray([NotNull] ParamParser.LiteralArrayContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ParamParser.literalString"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLiteralString([NotNull] ParamParser.LiteralStringContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ParamParser.literalString"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLiteralString([NotNull] ParamParser.LiteralStringContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ParamParser.literalInteger"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLiteralInteger([NotNull] ParamParser.LiteralIntegerContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ParamParser.literalInteger"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLiteralInteger([NotNull] ParamParser.LiteralIntegerContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ParamParser.literalFloat"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLiteralFloat([NotNull] ParamParser.LiteralFloatContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ParamParser.literalFloat"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLiteralFloat([NotNull] ParamParser.LiteralFloatContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ParamParser.literalOrArray"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLiteralOrArray([NotNull] ParamParser.LiteralOrArrayContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ParamParser.literalOrArray"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLiteralOrArray([NotNull] ParamParser.LiteralOrArrayContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ParamParser.literal"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLiteral([NotNull] ParamParser.LiteralContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ParamParser.literal"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLiteral([NotNull] ParamParser.LiteralContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ParamParser.arrayName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterArrayName([NotNull] ParamParser.ArrayNameContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ParamParser.arrayName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitArrayName([NotNull] ParamParser.ArrayNameContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ParamParser.identifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIdentifier([NotNull] ParamParser.IdentifierContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ParamParser.identifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIdentifier([NotNull] ParamParser.IdentifierContext context);
}
