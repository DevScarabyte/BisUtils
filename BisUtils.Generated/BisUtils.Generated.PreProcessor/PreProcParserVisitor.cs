//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.10.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from C:/Users/developer/Desktop/BisUtils/BisUtils.Generated/BisUtils.Generated.PreProcessor\PreProcParser.g4 by ANTLR 4.10.1

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using Antlr4.Runtime.Misc;
using Antlr4.Runtime.Tree;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete generic visitor for a parse tree produced
/// by <see cref="PreProcParser"/>.
/// </summary>
/// <typeparam name="Result">The return type of the visit operation.</typeparam>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.10.1")]
[System.CLSCompliant(false)]
public interface IPreProcParserVisitor<Result> : IParseTreeVisitor<Result> {
	/// <summary>
	/// Visit a parse tree produced by <see cref="PreProcParser.preprocessor"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPreprocessor([NotNull] PreProcParser.PreprocessorContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="PreProcParser.text"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitText([NotNull] PreProcParser.TextContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="PreProcParser.directive"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDirective([NotNull] PreProcParser.DirectiveContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="PreProcParser.ifdefDirective"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIfdefDirective([NotNull] PreProcParser.IfdefDirectiveContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="PreProcParser.ifndefDirective"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIfndefDirective([NotNull] PreProcParser.IfndefDirectiveContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="PreProcParser.elseDirective"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitElseDirective([NotNull] PreProcParser.ElseDirectiveContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="PreProcParser.endIfDirective"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitEndIfDirective([NotNull] PreProcParser.EndIfDirectiveContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>preprocessorConstant</c>
	/// labeled alternative in <see cref="PreProcParser.preprocessor_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPreprocessorConstant([NotNull] PreProcParser.PreprocessorConstantContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>preprocessorMacro</c>
	/// labeled alternative in <see cref="PreProcParser.preprocessor_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPreprocessorMacro([NotNull] PreProcParser.PreprocessorMacroContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="PreProcParser.preprocessor_macro"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPreprocessor_macro([NotNull] PreProcParser.Preprocessor_macroContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="PreProcParser.newLineOrEOF"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitNewLineOrEOF([NotNull] PreProcParser.NewLineOrEOFContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="PreProcParser.code"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCode([NotNull] PreProcParser.CodeContext context);
}
