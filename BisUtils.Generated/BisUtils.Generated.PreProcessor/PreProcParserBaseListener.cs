//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.10.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from /Users/ryannkelly/Desktop/BisUtils/BisUtils.Generated/BisUtils.Generated.PreProcessor/PreProcParser.g4 by ANTLR 4.10.1

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace BisUtils.Generated.PreProcessor;

using Antlr4.Runtime.Misc;
using IErrorNode = Antlr4.Runtime.Tree.IErrorNode;
using ITerminalNode = Antlr4.Runtime.Tree.ITerminalNode;
using IToken = Antlr4.Runtime.IToken;
using ParserRuleContext = Antlr4.Runtime.ParserRuleContext;

/// <summary>
/// This class provides an empty implementation of <see cref="IPreProcParserListener"/>,
/// which can be extended to create a listener which only needs to handle a subset
/// of the available methods.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.10.1")]
[System.Diagnostics.DebuggerNonUserCode]
[System.CLSCompliant(false)]
public partial class PreProcParserBaseListener : IPreProcParserListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="PreProcParser.preprocessor"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPreprocessor([NotNull] PreProcParser.PreprocessorContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PreProcParser.preprocessor"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPreprocessor([NotNull] PreProcParser.PreprocessorContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="PreProcParser.text"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterText([NotNull] PreProcParser.TextContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PreProcParser.text"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitText([NotNull] PreProcParser.TextContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="PreProcParser.lineMacro"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLineMacro([NotNull] PreProcParser.LineMacroContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PreProcParser.lineMacro"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLineMacro([NotNull] PreProcParser.LineMacroContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="PreProcParser.fileMacro"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFileMacro([NotNull] PreProcParser.FileMacroContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PreProcParser.fileMacro"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFileMacro([NotNull] PreProcParser.FileMacroContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="PreProcParser.directive"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDirective([NotNull] PreProcParser.DirectiveContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PreProcParser.directive"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDirective([NotNull] PreProcParser.DirectiveContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="PreProcParser.ifdefDirective"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIfdefDirective([NotNull] PreProcParser.IfdefDirectiveContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PreProcParser.ifdefDirective"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIfdefDirective([NotNull] PreProcParser.IfdefDirectiveContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="PreProcParser.ifndefDirective"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIfndefDirective([NotNull] PreProcParser.IfndefDirectiveContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PreProcParser.ifndefDirective"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIfndefDirective([NotNull] PreProcParser.IfndefDirectiveContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="PreProcParser.elseDirective"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterElseDirective([NotNull] PreProcParser.ElseDirectiveContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PreProcParser.elseDirective"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitElseDirective([NotNull] PreProcParser.ElseDirectiveContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="PreProcParser.endIfDirective"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterEndIfDirective([NotNull] PreProcParser.EndIfDirectiveContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PreProcParser.endIfDirective"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitEndIfDirective([NotNull] PreProcParser.EndIfDirectiveContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>preprocessorConstant</c>
	/// labeled alternative in <see cref="PreProcParser.preprocessor_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPreprocessorConstant([NotNull] PreProcParser.PreprocessorConstantContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>preprocessorConstant</c>
	/// labeled alternative in <see cref="PreProcParser.preprocessor_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPreprocessorConstant([NotNull] PreProcParser.PreprocessorConstantContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>preprocessorMacro</c>
	/// labeled alternative in <see cref="PreProcParser.preprocessor_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPreprocessorMacro([NotNull] PreProcParser.PreprocessorMacroContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>preprocessorMacro</c>
	/// labeled alternative in <see cref="PreProcParser.preprocessor_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPreprocessorMacro([NotNull] PreProcParser.PreprocessorMacroContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="PreProcParser.preprocessor_macro"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPreprocessor_macro([NotNull] PreProcParser.Preprocessor_macroContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PreProcParser.preprocessor_macro"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPreprocessor_macro([NotNull] PreProcParser.Preprocessor_macroContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="PreProcParser.newLineOrEOF"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNewLineOrEOF([NotNull] PreProcParser.NewLineOrEOFContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PreProcParser.newLineOrEOF"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNewLineOrEOF([NotNull] PreProcParser.NewLineOrEOFContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="PreProcParser.code"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCode([NotNull] PreProcParser.CodeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PreProcParser.code"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCode([NotNull] PreProcParser.CodeContext context) { }

	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void EnterEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void ExitEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitTerminal([NotNull] ITerminalNode node) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitErrorNode([NotNull] IErrorNode node) { }
}
